<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sws="http://www.springframework.org/schema/web-services"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/web-services http://www.springframework.org/schema/web-services/web-services-2.0.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <sws:annotation-driven/>
    <context:component-scan base-package="com.master.thesis.session.manager.service"></context:component-scan>
    <sws:dynamic-wsdl id="sessionManager"
                      portTypeName="SessionManager"
                      locationUri="http://localhost:8080/session-manager" requestSuffix="Request"
                      responseSuffix="Response"
                      targetNamespace="http://javaclue.blogger.com/session-manager">
        <sws:xsd location="classpath:/xsd/session-manager.xsd"/>
    </sws:dynamic-wsdl>

    <import resource="classpath:dao-config.xml"/>

    <bean class="org.springframework.ws.server.endpoint.adapter.GenericMarshallingMethodEndpointAdapter">
        <constructor-arg ref="marshaller"/>
    </bean>

    <bean class="org.springframework.ws.server.endpoint.mapping.PayloadRootAnnotationMethodEndpointMapping"></bean>
    <bean id="marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="contextPath" value="com.master.thesis.service.model"/>
    </bean>

    <bean id="sessionRepository" class="com.master.thesis.session.manager.service.session.repository.SessionRepository">
        <property name="repositorySize" value="10"/>
    </bean>

    <bean id="sessionPrivilegeResolver" class="com.master.thesis.session.manager.service.SessionPrivilegeResolver">
        <property name="serviceDao" ref="serviceDao"/>
        <property name="privilegesMapper" ref="privilegesMapper"/>
    </bean>

    <bean id="privilegesMapper" class="com.master.thesis.session.manager.service.PrivilegesMapper"/>


    <bean id="verifySessionResponseProcessor" class="com.master.thesis.session.manager.service.verifySession.VerifySessionResponseProcessor">
        <property name="sessionPrivilegeResolver" ref="sessionPrivilegeResolver"/>
        <property name="sessionRepository" ref="sessionRepository"/>
    </bean>

    <bean id="sessionCreator" class="com.master.thesis.session.manager.service.createSession.SessionCreator">
        <property name="sessionRepository" ref="sessionRepository"/>
    </bean>

    <bean id="createSessionResponseProcessor" class="com.master.thesis.session.manager.service.createSession.CreateSessionResponseProcessor"/>

    <bean id="createSessionCommand" class="com.master.thesis.session.manager.service.createSession.CreateSessionCommand">
        <property name="sessionCreator" ref="sessionCreator"/>
        <property name="sessionPrivilegeResolver" ref="sessionPrivilegeResolver"/>
    </bean>
</beans>